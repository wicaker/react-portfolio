{"version":3,"sources":["layout/Navbar.js","pages/Parallax.js","pages/Contact.js","pages/Skills.js","App.js","serviceWorker.js","index.js","images/profile.jpg"],"names":["Navbar","react_default","a","createElement","lib","trigger","className","waves","options","closeOnClick","src","profile","alt","height","width","Link","to","NavLink","Component","MyComponent","class","style","dist_default","speed","loop","face","Speed","ms","href","Contact","Skills","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ce5dbd46.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link, NavLink} from 'react-router-dom';\nimport {Button, SideNav} from 'react-materialize';\nimport profile from '../images/profile.jpg';\n\n\nclass Navbar extends Component {\n  render() {\n    return (\n        <SideNav \n          trigger={<Button className='transparant-color btn-large btn-floating nav-button' waves='red'><i className=\"fas fa-bars white-text fa-3x\"></i></Button>}\n          options={{ closeOnClick: true }}\n          className=\"warna\"\n          >\n          <div className='center'><img src={profile} alt='i-gede-wicaksana' className='circle' height='150' width='150'/></div>\n          <Link to='/' className='white-text'><h4><i className=\"fas fa-home orange-text fa-1x\"></i> Home</h4></Link>\n          <NavLink to='/about' className='white-text'><h4><i className=\"fas fa-user red-text fa-1x\"></i> About Me </h4></NavLink>\n          <NavLink to='/project' className='white-text'><h4><i className=\"fas fa-briefcase blue-text fa-1x\"></i> My Project </h4></NavLink>\n          <NavLink to='/contact' className='white-text'><h4><i className=\"fas fa-phone green-text fa-1x\"></i> Contact Me </h4></NavLink>\n        </SideNav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\nimport Typing from 'react-typing-animation';\n\nconst MyComponent = () => (  \n    <div className=\"black container\">\n    <div class=\"row section\" style={{height:'50vh'}}>\n        <div class=\"col s12 valign-wrapper\"style={{height:'200%'}} >\n          <div class=\"valign white-text\">\n            <Typing speed={500} loop={true} >\n              <font face=\"Courier New\"><h1><b>I Gede</b> <span className='yellow-text'>Wicaksana</span></h1></font>\n              <Typing.Speed ms={200} />\n              <font face=\"Courier\"><h3><span className='red-text'>Developer</span> | <span className='green-text'>Programmer</span> | <span className='purple-text'>Entrepreneur</span></h3></font>\n            </Typing>\n            <a href=\"https://twitter.com/igedewicaksana\"><i className=\"fab fa-twitter fa-3x\"></i></a>\n            <a href=\"https://www.facebook.com/agus.wicaksana.9\"><i className=\"fab fa-facebook fa-3x social-media-margin-left\"></i></a>\n            <a href=\"https://www.linkedin.com/in/i-gede-wicaksana-761a69152/\"><i className=\"fab fa-linkedin fa-3x social-media-margin-left\"></i></a>\n            <a href=\"https://github.com/wicaker\"><i className=\"fab fa-github fa-3x social-media-margin-left\"></i></a>\n          </div>\n        </div>\n      </div>\n    </div>\n);\nexport default MyComponent;","import React from 'react'\n\n\nconst Contact = () => {\n  return (\n    <div>\n      <div>Hubungi kami</div>\n    </div>\n  )\n}\n\nexport default Contact;","import React from 'react'\n\n\n\nconst Skills = () => {\n  return (\n    <div>\n      <h1 className='center'>My Skills</h1>\n    </div>\n\n  )\n}\n\nexport default Skills;","import React, { Component } from 'react';\nimport NavbarMenu from './layout/Navbar';\nimport MyComponent from'./pages/Parallax';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Contact from'./pages/Contact';\nimport Skills from'./pages/Skills';\n\nclass App extends Component {\n  render() {\n    return (\n       <BrowserRouter>\n      <div >\n        <NavbarMenu />\n        <Switch>\n          <Route exact path='/' component ={MyComponent}/>\n          <Route exact path='/skills' component ={Skills}/>\n          <Route exact path='/contact' component ={Contact}/>\n        </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/profile.08024bd3.jpg\";"],"sourceRoot":""}